{"ast":null,"code":"import { DirectorCardComponent } from '../director-card/director-card.component';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../navbar/navbar.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\n\nfunction MovieCardComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-dialog-content\", 2)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"mat-card-subtitle\");\n    i0.ɵɵelement(6, \"img\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-header\")(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.openDirectorDialog(movie_r1.Director.Name, movie_r1.Director.Bio, movie_r1.Director.Birth);\n    });\n    i0.ɵɵtext(9, \" Director Details \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.openGenreDialog(movie_r1.Genre.Name, movie_r1.Genre.Description);\n    });\n    i0.ɵɵtext(11, \" Genre Details \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.openSynopsis(movie_r1.Title, movie_r1.ImagePath, movie_r1.Description);\n    });\n    i0.ɵɵtext(13, \" Synopsis \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.addToUserFavs(movie_r1._id);\n    });\n    i0.ɵɵtext(15, \" Add Movie To Favourite \");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(movie_r1.Title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", movie_r1.ImagePath, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let MovieCardComponent = /*#__PURE__*/(() => {\n  class MovieCardComponent {\n    constructor(fetchApiData, dialog, snackBar, router) {\n      this.fetchApiData = fetchApiData;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.user = {};\n      this.Username = localStorage.getItem('user');\n      this.movies = [];\n      this.currentUser = null;\n      this.currentFavs = null;\n    }\n\n    ngOnInit() {\n      this.getMovies();\n      this.getCurrentUser();\n    }\n    /**\r\n     *  Use Api call to get data of all movies\r\n     * @function getAllMovies\r\n     * @returns movies in JSON format\r\n     */\n\n\n    getMovies() {\n      this.fetchApiData.getAllMovies().subscribe(resp => {\n        this.movies = resp;\n        console.log(this.movies);\n        return this.movies;\n      });\n    }\n    /**\r\n     * open a dialog to display the DirectorCardComponent\r\n     * @param name {string}\r\n     * @param bio {string}\r\n     * @param birth {string}\r\n     */\n\n\n    openDirectorDialog(name, bio, birth) {\n      this.dialog.open(DirectorCardComponent, {\n        data: {\n          Name: name,\n          Bio: bio,\n          Birth: birth\n        },\n        width: '500px'\n      });\n    }\n    /**\r\n     * open a dialog to display the GenreCardComponent\r\n     * @param name {string}\r\n     * @param description {string}\r\n     */\n\n\n    openGenreDialog(name, description) {\n      this.dialog.open(GenreCardComponent, {\n        data: {\n          Name: name,\n          Description: description\n        },\n        width: '500px'\n      });\n    }\n    /**\r\n     * open a dialog to display the SynopsisCardComponent\r\n     * @param title {string}\r\n     * @param imagePath {string}\r\n     * @param description {string}\r\n     */\n\n\n    openSynopsis(title, imagePath, description) {\n      this.dialog.open(SynopsisCardComponent, {\n        data: {\n          Title: title,\n          ImagePath: imagePath,\n          Description: description\n        },\n        width: '500px'\n      });\n    }\n    /**\r\n     * use API to get current user data\r\n     * @function getCurrentUser()\r\n        */\n\n\n    getCurrentUser() {\n      const username = localStorage.getItem('user');\n      this.fetchApiData.getUser(username).subscribe(resp => {\n        console.log(resp);\n        const currentUser = resp.Username;\n        console.log(currentUser);\n        const currentFavs = resp.FavouriteMovies;\n        console.log(currentFavs);\n      });\n    }\n    /**\r\n     * use API end-point to add user favorite movie\r\n     * @function addToUserFavs()\r\n     * @param id {string}\r\n     */\n\n\n    addToUserFavs(id) {\n      console.log(id);\n      const token = localStorage.getItem('token');\n      console.log(token);\n      this.fetchApiData.addFavMovie(id).subscribe(response => {\n        console.log(response);\n        this.ngOnInit();\n      });\n    }\n    /**\r\n     * use API end-point to delete user favorite movie\r\n     * @function\r\n     * @param id DeleteFavs()\r\n     */\n\n\n    DeleteFavs(id) {\n      console.log(id);\n      this.fetchApiData.deleteFavMovie(id).subscribe(response => {\n        console.log(response);\n      });\n    }\n\n  }\n\n  MovieCardComponent.ɵfac = function MovieCardComponent_Factory(t) {\n    return new (t || MovieCardComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  MovieCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MovieCardComponent,\n    selectors: [[\"app-movie-card\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"movie-card\", 2, \"display\", \"flex\"], [4, \"ngFor\", \"ngForOf\"], [1, \"\"], [1, \"img-container\"], [3, \"src\"], [\"mat-button\", \"\", \"color\", \"grey\", 1, \"director-button\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"grey\", 1, \"genre-button\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"grey\", 1, \"synopsis-button\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function MovieCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, MovieCardComponent_mat_card_2_Template, 16, 2, \"mat-card\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n      }\n    },\n    directives: [i5.NavbarComponent, i6.NgForOf, i7.MatCard, i2.MatDialogContent, i7.MatCardTitle, i7.MatCardSubtitle, i7.MatCardHeader, i8.MatButton],\n    styles: [\".movie-card[_ngcontent-%COMP%]{background-color:#511026;display:flex;flex-wrap:wrap;justify-content:space-around;justify-items:stretch;padding-top:1rem;padding-bottom:1rem;margin-bottom:2rem}.img-container[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center}.mat-card[_ngcontent-%COMP%]{margin:1rem;display:grid;background-color:#daf7a6;overflow:hidden}.mat-card-header[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;background-color:#e6e6e6}\"]\n  });\n  return MovieCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}